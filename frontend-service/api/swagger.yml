---
swagger: "2.0"
info:
  description: "Blox frontend"
  version: "v2017-07-11"
  title: "ecs-blox-frontend"
paths:
  /v1/{cluster}/environments:
    get:
      summary: "List all environments"
      description: ""
      operationId: "listEnvironments"
      produces:
      - "application/json"
      parameters:
      - name: "cluster"
        in: "path"
        required: true
        type: "string"
      - name: "environmentNamePrefix"
        in: "query"
        required: false
        type: "string"
      - name: "maxResults"
        in: "query"
        required: true
        type: "integer"
        format: "int64"
      - name: "nextToken"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ListEnvironmentsResponse"
      security:
      - defaultAuthorization: []
      x-amazon-apigateway-integration:
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrontendHandler.Arn}/invocations"
    post:
      summary: "Create a new Environment"
      description: "This call will create a new Environment and EnvironmentRevision,\
        \ returning that revision's ID."
      operationId: "createEnvironment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cluster"
        in: "path"
        description: "The short name or full Amazon Resource Name (ARN) of the cluster\
          \ on which to run your Environment. If you do not specify a cluster, the\
          \ default cluster is assumed."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateEnvironmentRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CreateEnvironmentResponse"
      security:
      - defaultAuthorization: []
      x-amazon-apigateway-integration:
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrontendHandler.Arn}/invocations"
  /v1/{cluster}/environments/{environmentName}:
    get:
      summary: "Describe an Environment by name"
      description: ""
      operationId: "describeEnvironment"
      produces:
      - "application/json"
      parameters:
      - name: "cluster"
        in: "path"
        required: true
        type: "string"
      - name: "environmentName"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DescribeEnvironmentResponse"
      security:
      - defaultAuthorization: []
      x-amazon-apigateway-integration:
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrontendHandler.Arn}/invocations"
    delete:
      summary: "Delete an Environment by name"
      description: ""
      operationId: "deleteEnvironment"
      produces:
      - "application/json"
      parameters:
      - name: "cluster"
        in: "path"
        required: true
        type: "string"
      - name: "environmentName"
        in: "path"
        required: true
        type: "string"
      - name: "forceDelete"
        in: "query"
        required: false
        type: "boolean"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DeleteEnvironmentResponse"
      security:
      - defaultAuthorization: []
      x-amazon-apigateway-integration:
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrontendHandler.Arn}/invocations"
  /v1/{cluster}/environments/{environmentName}/deployments:
    get:
      summary: "List Environment deployments"
      description: ""
      operationId: "listEnvironmentDeployments"
      produces:
      - "application/json"
      parameters:
      - name: "maxResults"
        in: "query"
        required: true
        type: "integer"
        format: "int64"
      - name: "nextToken"
        in: "query"
        required: true
        type: "string"
      - name: "cluster"
        in: "path"
        required: true
        type: "string"
      - name: "environmentName"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ListEnvironmentDeploymentsResponse"
      security:
      - defaultAuthorization: []
      x-amazon-apigateway-integration:
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrontendHandler.Arn}/invocations"
    post:
      summary: "Deploy Environment revision"
      description: ""
      operationId: "startDeployment"
      produces:
      - "application/json"
      parameters:
      - name: "cluster"
        in: "path"
        required: true
        type: "string"
      - name: "environmentName"
        in: "path"
        required: true
        type: "string"
      - name: "revisionId"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StartDeploymentResponse"
      security:
      - defaultAuthorization: []
      x-amazon-apigateway-integration:
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrontendHandler.Arn}/invocations"
  /v1/{cluster}/environments/{environmentName}/deployments/{deploymentId}:
    get:
      summary: "Describe Environment deployment history"
      description: ""
      operationId: "describeEnvironmentDeployment"
      produces:
      - "application/json"
      parameters:
      - name: "cluster"
        in: "path"
        required: true
        type: "string"
      - name: "environmentName"
        in: "path"
        required: true
        type: "string"
      - name: "deploymentId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DescribeEnvironmentDeploymentResponse"
      security:
      - defaultAuthorization: []
      x-amazon-apigateway-integration:
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrontendHandler.Arn}/invocations"
  /v1/{cluster}/environments/{environmentName}/revisions:
    get:
      summary: "List Environment Revisions"
      description: ""
      operationId: "listEnvironmentRevisions"
      produces:
      - "application/json"
      parameters:
      - name: "cluster"
        in: "path"
        required: true
        type: "string"
      - name: "environmentName"
        in: "path"
        required: true
        type: "string"
      - name: "maxResults"
        in: "query"
        required: true
        type: "integer"
        format: "int64"
      - name: "nextToken"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ListEnvironmentRevisionsResponse"
      security:
      - defaultAuthorization: []
      x-amazon-apigateway-integration:
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrontendHandler.Arn}/invocations"
  /v1/{cluster}/environments/{environmentName}/revisions/{environmentRevisionId}:
    get:
      summary: "Describe Environment revisions"
      description: ""
      operationId: "describeEnvironmentRevision"
      produces:
      - "application/json"
      parameters:
      - name: "cluster"
        in: "path"
        required: true
        type: "string"
      - name: "environmentName"
        in: "path"
        required: true
        type: "string"
      - name: "environmentRevisionId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DescribeEnvironmentRevisionResponse"
      security:
      - defaultAuthorization: []
      x-amazon-apigateway-integration:
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrontendHandler.Arn}/invocations"
securityDefinitions:
  defaultAuthorization:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "awsSigv4"
definitions:
  Attribute:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "string"
  CreateEnvironmentRequest:
    type: "object"
    properties:
      environmentName:
        type: "string"
      environmentType:
        type: "string"
      taskDefinition:
        type: "string"
      deploymentMethod:
        type: "string"
      role:
        type: "string"
      instanceGroup:
        $ref: "#/definitions/InstanceGroup"
      deploymentConfiguration:
        $ref: "#/definitions/DeploymentConfiguration"
  CreateEnvironmentResponse:
    type: "object"
    properties:
      environmentRevisionId:
        type: "string"
  DeleteEnvironmentResponse:
    type: "object"
    properties:
      environment:
        $ref: "#/definitions/Environment"
  Deployment:
    type: "object"
    properties:
      deploymentId:
        type: "string"
      timestamp:
        type: "integer"
        format: "int64"
      environmentName:
        type: "string"
      oldTargetRevisionId:
        type: "string"
      newTargetRevisionId:
        type: "string"
  DeploymentConfiguration:
    type: "object"
  DescribeEnvironmentDeploymentResponse:
    type: "object"
    properties:
      deployment:
        $ref: "#/definitions/Deployment"
  DescribeEnvironmentResponse:
    type: "object"
    properties:
      environment:
        $ref: "#/definitions/Environment"
  DescribeEnvironmentRevisionResponse:
    type: "object"
    properties:
      environmentRevision:
        $ref: "#/definitions/EnvironmentRevision"
  Environment:
    type: "object"
    properties:
      environmentName:
        type: "string"
      cluster:
        type: "string"
      role:
        type: "string"
      environmentType:
        type: "string"
      environmentHealth:
        type: "string"
      deploymentMethod:
        type: "string"
      deploymentConfiguration:
        $ref: "#/definitions/DeploymentConfiguration"
      activeEnvironmentRevisionId:
        type: "string"
      latestEnvironmentRevisionId:
        type: "string"
  EnvironmentRevision:
    type: "object"
    properties:
      environmentRevisionId:
        type: "string"
      taskDefinition:
        type: "string"
      instanceGroup:
        $ref: "#/definitions/InstanceGroup"
      counts:
        $ref: "#/definitions/TaskCounts"
  InstanceGroup:
    type: "object"
    properties:
      attributes:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/Attribute"
  ListEnvironmentDeploymentsResponse:
    type: "object"
    properties:
      nextToken:
        type: "string"
      deploymentIds:
        type: "array"
        items:
          type: "string"
  ListEnvironmentRevisionsResponse:
    type: "object"
    properties:
      revisionIds:
        type: "array"
        items:
          type: "string"
  ListEnvironmentsResponse:
    type: "object"
    properties:
      environmentNames:
        type: "array"
        items:
          type: "string"
      nextToken:
        type: "string"
  StartDeploymentResponse:
    type: "object"
    properties:
      deploymentId:
        type: "string"
  TaskCounts:
    type: "object"
    properties:
      desired:
        type: "integer"
        format: "int64"
      healthy:
        type: "integer"
        format: "int64"
      total:
        type: "integer"
        format: "int64"
